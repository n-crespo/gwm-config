general:
  # Commands to run when the WM has started (e.g. to run a script or launch
  # another application). Here we are running a batch script to start Zebar.
  startup_commands: ["shell-exec yasb"]

  # Commands to run just before the WM is shutdown.
  # Example: The below command kills Zebar.
  shutdown_commands: ["shell-exec taskkill /IM yasb.exe /F"]

  # Commands to run after the WM config is reloaded.
  config_reload_commands: ["shell-exec yasb"]

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: false

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  # How windows should be hidden when switching workspaces.
  # - 'cloak': Recommended. Hides windows with no animation and keeps them
  # visible in the taskbar.
  # - 'hide': Legacy method (v3.5 and earlier) that has a brief animation,
  # but has stability issues with some apps.
  hide_method: "cloak"

  # NOTE: this works very sporadically (with cloak)

  # Affects which windows get shown in the native Windows taskbar. Has no
  # effect if `hide_method: 'hide'`.
  # - 'true': Show all windows (regardless of workspace).
  # - 'false': Only show windows from the currently shown workspaces.
  show_all_in_taskbar: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: "monitor_focus"

gaps:
  # Whether to scale the gaps with the DPI of the monitor.
  scale_with_dpi: true

  # Gap between adjacent windows.
  inner_gap: "0px"

  # Gap between windows and the screen edge.
  outer_gap:
    top: "1px"
    right: "0px"
    bottom: "1px"
    left: "0px"

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: "#625e5a"

    hide_title_bar:
      enabled: false

    # Change the corner style of the window's frame.
    # ** Exclusive to Windows 11 due to API limitations.
    corner_style:
      enabled: true
      # Allowed values: 'square', 'rounded', 'small_rounded'.
      style: "rounded"

  # Visual effects to apply to non-focused windows.
  other_windows:
    transparency:
      enabled: false
      opacity: 100%
    border:
      enabled: true
      color: "#222222"

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: "tiling"

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: false

      # Whether to show floating windows as always on top.
      shown_on_top: true

    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: false

      # Whether to show fullscreen windows as always on top.
      shown_on_top: true

workspaces:
  - name: "0"
    display_name: ""
    keep_alive: false

  - name: "1"
    display_name: "1"
  - name: "2"
    display_name: "2"
  - name: "3"
    display_name: "3"
  - name: "4"
    display_name: "4"
  - name: "5"
    display_name: "5"
  - name: "6"
    display_name: "6"
  - name: "7"
    display_name: "7"
  - name: "8"
    display_name: "8"
  - name: "9"
    display_name: "9"

  - name: "10" # for beeper + phone link
    display_name: "󰄡"

  - name: "11"
    display_name: "󰇰"
    keep_alive: false

  - name: "12" # ucla mail
    display_name: "󰻨"
    keep_alive: false

  - name: "13"
    display_name: ""
    keep_alive: false

  - name: "14"
    display_name: "󰄴"
    keep_alive: false

window_rules:
  - commands: ["ignore"]
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: "zebar" }

      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: "[Pp]icture.in.[Pp]icture" }
        window_class: { regex: "Chrome_WidgetWin_1|MozillaDialogClass" }

      - window_title: { regex: "Focus Timer" } # Win + R

      - window_process:
          {
            regex: "TickTick|ScreenClippingHost|Wintoys|msrdc|GHelper|QuickLook|ScreenColorPicker|LockApp|Flow.Launcher",
          }
      - window_title: { regex: "Window Spy for AHKv2" }
      # - window_class: { regex: "^HwndWrapper[TickTick.exe;;.*$" }

  - commands: ["set-floating"]
    match:
      - window_title:
          {
            regex: "Go to|This PC|Picture in picture|Sync to Most Recent Page Read|Bitwarden",
          }
      - window_class:
          {
            regex: "ApplicationFrameWindow|HwndWrapper*|open|#32770|SunAwtDialog",
          }
      - window_process:
          {
            regex: "explorer|Notepad|sublime_text|neovide|Photos|Discord|Steam|BCUninstaller|ProtonVPNService|ProtonVPN|SnippingTool|localsend_app|OpenConsole|Taskmgr|Beeper|procexp",
          }

  - commands: ["move --workspace 14"]
    match:
      - window_title: { regex: "^TickTick -*" }
        window_process: { regex: "brave" }

  - commands: ["move --workspace 11"]
    match:
      - window_title:
          {
            regex: "(Gmail - Inbox( \\(\\d+\\))? - nicolasecrespo@gmail.com - Gmail)",
          }

  - commands: ["move --workspace 12"]
    match:
      - window_title:
          {
            regex: "(Gmail - Inbox( \\(\\d+\\))? - ncrespo@g.ucla.edu - Google Apps for UCLA Mail)",
          }

  - commands: ["move --workspace 13"]
    match:
      - window_process: { equals: "Spotify" }

  - commands: ["move --workspace 10"]
    match:
      - window_process: { equals: "Beeper" }

binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  # - name: 'resize'
  #   keybindings:
  #     - commands: ['resize --width -2%']
  #       bindings: ['h', 'left']
  #     - commands: ['resize --width +2%']
  #       bindings: ['l', 'right']
  #     - commands: ['resize --height +2%']
  #       bindings: ['k', 'up']
  #     - commands: ['resize --height -2%']
  #       bindings: ['j', 'down']
  #     # Press enter/escape to return to default keybindings.
  #     - commands: ['wm-disable-binding-mode --name resize']
  #       bindings: ['escape', 'enter']

  # When enabled, all keybindings are disabled except for alt+shift+p which
  # returns to default keybindings.
  - name: "pause"
    keybindings:
      - commands: ["wm-disable-binding-mode --name pause"]
        bindings: ["alt+shift+p"]

keybindings:
  # Shift focus in a given direction.
  - commands: ["focus --direction left"]
    bindings: ["alt+h"]
  - commands: ["focus --direction right"]
    bindings: ["alt+l"]
  - commands: ["focus --direction up"]
    bindings: ["alt+k"]
  - commands: ["focus --direction down"]
    bindings: ["alt+j"]

  # Move focused window in a given direction.
  - commands: ["move --direction left"]
    bindings: ["alt+shift+h"]
  - commands: ["move --direction right"]
    bindings: ["alt+shift+l"]
  - commands: ["move --direction up"]
    bindings: ["alt+shift+k"]
  - commands: ["move --direction down"]
    bindings: ["alt+shift+j"]

  # Resize focused window by a percentage or pixel amount.
  - commands: ["resize --width -3%"]
    bindings: ["alt+oem_minus"]
  - commands: ["resize --width +3%"]
    bindings: ["alt+oem_plus"]
  - commands: ["resize --height -3%"]
    bindings: ["alt+shift+oem_minus"]
  - commands: ["resize --height +3%"]
    bindings: ["alt+shift+oem_plus"]

  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name 'resize'.
  # - commands: ["wm-enable-binding-mode --name resize"]
  #   bindings: ["alt+r"]

  # Disables all keybindings until alt+shift+p is pressed again.
  - commands: ["wm-enable-binding-mode --name pause"]
    bindings: ["alt+shift+p"]

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ["toggle-tiling-direction"]
    bindings: ["alt+shift+d"]
  - commands: ["toggle-tiling-direction"]
    bindings: ["alt+v"]

  # Change focus from tiling windows -> floating -> fullscreen.
  - commands: ["wm-cycle-focus"]
    bindings: ["alt+f"]

  # Change the focused window to be floating.
  - commands: ["toggle-floating --centered"]
    bindings: ["alt+shift+f"]

  # Change the focused window to be tiling.
  - commands: ["toggle-tiling"]
    bindings: ["alt+t"]

  # Change the focused window to be fullscreen.
  - commands: ["toggle-fullscreen"]
    bindings: ["alt+x"]

  # Minimize focused window.
  - commands: ["toggle-minimized"]
    bindings: ["alt+c"]

  # Close focused window.
  - commands: ["close"]
    bindings: ["alt+q"]

  # Kill GlazeWM process safely.
  - commands: ["wm-exit"]
    bindings: ["alt+shift+z"]

  # Re-evaluate configuration file.
  - commands: ["wm-reload-config"]
    bindings: ["alt+shift+r"]

  # Redraw all windows.
  - commands: ["wm-redraw"]
    bindings: ["alt+shift+w"]

  # Launch CMD terminal. Alternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  - commands: ["shell-exec wt"]
    bindings: ["alt+enter"]

  - commands: ['shell-exec wt --profile "PowerShell"']
    bindings: ["alt+shift+enter"]

  - commands: ["shell-exec brave --profile-directory=default"]
    bindings: ["alt+w"]

  - commands: ["shell-exec wt nt -c btop"]
    bindings: ["alt+b"]

  # - commands: ["shell-exec brave"]
  #   bindings: ["alt+shift+w"]

  # Focus the next/previous workspace defined in `workspaces` config.
  - commands: ["focus --next-active-workspace"]
    bindings: ["alt+d"]
  - commands: ["focus --prev-active-workspace"]
    bindings: ["alt+a"]

  - commands: ["move --next-workspace", "focus --next-workspace"]
    bindings: ["alt+shift+d"]
  - commands: ["move --prev-workspace", "focus --prev-workspace"]
    bindings: ["alt+shift+a"]

  # Focus the workspace that last had focus.
  - commands: ["focus --recent-workspace"]
    bindings: ["alt+`"]

  # Change focus to a workspace defined in `workspaces` config.
  - commands: ["focus --workspace 0"]
    bindings: ["alt+escape"]
  - commands: ["focus --workspace 1"]
    bindings: ["alt+1"]
  - commands: ["focus --workspace 2"]
    bindings: ["alt+2"]
  - commands: ["focus --workspace 3"]
    bindings: ["alt+3"]
  - commands: ["focus --workspace 4"]
    bindings: ["alt+4"]
  - commands: ["focus --workspace 5"]
    bindings: ["alt+5"]
  - commands: ["focus --workspace 6"]
    bindings: ["alt+6"]
  - commands: ["focus --workspace 7"]
    bindings: ["alt+7"]
  - commands: ["focus --workspace 8"]
    bindings: ["alt+8"]
  - commands: ["focus --workspace 9"]
    bindings: ["alt+9"]
  - commands: ["focus --workspace 14"]
    bindings: ["alt+e"]
  - commands: ["focus --workspace 13"]
    bindings: ["alt+s"]
  - commands: ["focus --workspace 10"]
    bindings: ["alt+m"]
  - commands: ["focus --workspace 11"]
    bindings: ["alt+,"]
  - commands: ["focus --workspace 12"]
    bindings: ["alt+."]

  # Move the focused window's parent workspace to a monitor in a given
  # direction.
  # - commands: ["move-workspace --direction left"]
  #   bindings: ["alt+shift+a"]
  # - commands: ["move-workspace --direction right"]
  #   bindings: ["alt+shift+f"]
  # - commands: ["move-workspace --direction up"]
  #   bindings: ["alt+shift+d"]
  # - commands: ["move-workspace --direction down"]
  #   bindings: ["alt+shift+s"]

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ["move --workspace 0"]
    bindings: ["alt+shift+escape"]
  - commands: ["move --workspace 1"]
    bindings: ["alt+shift+1"]
  - commands: ["move --workspace 2"]
    bindings: ["alt+shift+2"]
  - commands: ["move --workspace 3"]
    bindings: ["alt+shift+3"]
  - commands: ["move --workspace 4"]
    bindings: ["alt+shift+4"]
  - commands: ["move --workspace 5"]
    bindings: ["alt+shift+5"]
  - commands: ["move --workspace 6"]
    bindings: ["alt+shift+6"]
  - commands: ["move --workspace 7"]
    bindings: ["alt+shift+7"]
  - commands: ["move --workspace 8"]
    bindings: ["alt+shift+8"]
  - commands: ["move --workspace 9"]
    bindings: ["alt+shift+9"]
  - commands: ["move --workspace 14"]
    bindings: ["alt+shift+e"]
  - commands: ["move --workspace 13"]
    bindings: ["alt+shift+s"]
  - commands: ["move --workspace 11"]
    bindings: ["alt+shift+m"]
  - commands: ["move --workspace 11"]
    bindings: ["alt+shift+,"]
  - commands: ["move --workspace 12"]
    bindings: ["alt+shift+."]
